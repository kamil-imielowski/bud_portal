# Easy Admin Configuration
easy_admin:
    site_name: 'Panel administracyjny'
    formats:
            datetime: 'd.m.Y H:i'
    design:
        brand_color: 'rgb(2, 93, 244)'
        assets:
          favicon: 'assets/img/favicon.png'
          js:
            - 'js/easyadminbundle.js'
        menu:
          - { entity: 'Blog', icon: 'align-justify' }
          - { entity: 'NewsLetterEmails', icon: 'envelope' }
          - { label: 'Lawbook' }
          - { entity: 'Lawbook', icon: 'gavel' }
          - { entity: 'LawbookCategory', icon: 'gavel' }
          - { label: 'Questions' }
          - { entity: 'WrittenQuestion', icon: 'question' }
          - { entity: 'VerbalQuestion', icon: 'question' }
          - { entity: 'QuestionCategories', icon: 'question' }
          - { label: 'Settings' }
          - { entity: 'CMS', icon: 'bolt' }
          - { entity: 'Settings', icon: 'cog' }

    list:
      actions:
        - { name: 'show', icon: 'search', label: ''}
        - { name: 'edit', icon: 'pencil', label: ''}
        - { name: 'delete', icon: 'times', label: ''}

    entities:

        CMS:
            class: AppBundle\Entity\CMS
            disabled_actions: ['new', 'delete']
            form:  # <-- 'form' is applied to both 'new' and 'edit' views
                fields:
                  - { property: 'content', type: 'Ivory\CKEditorBundle\Form\Type\CKEditorType', type_options: { config_name: 'base_config' } }
            list:
              fields:
                - {property: 'place'}
                - {property: 'updatedAt'}

        Blog:
          class: AppBundle\Entity\Blog
          form:
              fields:
                  - {property: 'title', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
                  - {property: 'imageFile', type: 'Vich\UploaderBundle\Form\Type\VichImageType'}
                  - {property: 'content', type: 'Ivory\CKEditorBundle\Form\Type\CKEditorType'}
                  - {property: 'published', type: 'Symfony\Component\Form\Extension\Core\Type\CheckboxType'}
          list:
            fields:
              - {property: 'title'}
              - {property: 'image', type: 'image', base_path: "%app.blog.image%"}
              - {property: 'published', type: 'toggle'}
              - {property: 'views'}


        Lawbook:
          class: AppBundle\Entity\Lawbook
          form:
              fields:
                  - {property: 'title', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
                  - {property: 'content', type: 'Ivory\CKEditorBundle\Form\Type\CKEditorType'}
                  - {property: 'category', type: 'Symfony\Bridge\Doctrine\Form\Type\EntityType', type_options: {class: AppBundle\Entity\LawbookCategory, choice_label: 'name', required: true, empty_data: null}}
                  - {property: 'published', type: 'Symfony\Component\Form\Extension\Core\Type\CheckboxType'}
                  - {property: 'freeDownload', type: 'Symfony\Component\Form\Extension\Core\Type\CheckboxType'}
          list:
            fields:
              - {property: 'title'}
              - {property: 'category.name'}
              - {property: 'published', type: 'toggle'}
              - {property: 'freeDownload', type: 'toggle'}
              - {property: 'views'}

        LawbookCategory:
          class: AppBundle\Entity\LawbookCategory
          form:
              fields:
                  - {property: 'name', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
          list:
            fields:
              - {property: 'id'}
              - {property: 'name'}
              - {property: 'updatedAt'}

        WrittenQuestion:
          class: AppBundle\Entity\WrittenQuestion
          form:
            fields:
              - {property: 'question', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
              - {property: 'answerA', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
              - {property: 'answerB', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
              - {property: 'answerC', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
              - {property: 'category', type: 'Symfony\Bridge\Doctrine\Form\Type\EntityType', type_options: {class: AppBundle\Entity\QuestionCategories, choice_label: 'name', required: true, empty_data: null}}
          list:
            fields:
              - {property: 'id'}
              - {property: 'question'}
              - {property: 'answerA'}
              - {property: 'isFree', type: 'toggle'}
              - {property: 'category.name'}
              - {property: 'updatedAt'}

        VerbalQuestion:
          class: AppBundle\Entity\VerbalQuestion
          form:
            fields:
              - {property: 'question', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
              - {property: 'answer', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
              - {property: 'category', type: 'Symfony\Bridge\Doctrine\Form\Type\EntityType', type_options: {class: AppBundle\Entity\QuestionCategories, choice_label: 'name', required: true, empty_data: null}}
          list:
            fields:
              - {property: 'id'}
              - {property: 'question'}
              - {property: 'answer'}
              - {property: 'isFree', type: 'toggle'}
              - {property: 'category.name'}
              - {property: 'updatedAt'}

        QuestionCategories:
          class: AppBundle\Entity\QuestionCategories
          form:
              fields:
                  - {property: 'name', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
          list:
            fields:
              - {property: 'id'}
              - {property: 'name'}
              - {property: 'updatedAt'}

        Settings:
          class: AppBundle\Entity\Settings
          list:
              fields: ['description', 'value']
          disabled_actions: ['show', 'new', 'delete']
          form:
            fields:
#              - 'valueKey'
              - 'description'
              - 'value'

        NewsLetterEmails:
          class: AppBundle\Entity\NewsLetterEmails
          controller: AppBundle\Controller\NewsletterAdminController
          disabled_actions: ['delete']
          form:
            fields:
                - {property: 'title', type: 'Symfony\Component\Form\Extension\Core\Type\TextType'}
                - {property: 'content', type: 'Ivory\CKEditorBundle\Form\Type\CKEditorType'}

#        Advertising:
#            class: AppBundle\Entity\Advertising
#            form:
#              fields:
#                - {property: 'name', label: 'Nazwa'}
#                - {property: 'place', label: 'Miejsce wyświetlania', type: 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', type_options: {choices: {miejsce1: 1, miejsce2: 2, miejsce3: 3, miejsce4: 4}}}
#                - {property: 'code', label: 'Kod'}
#                - {property: 'expireAt', label: 'Ważne do:'}
#
#        Movie:
#            class: AppBundle\Entity\Movie
#            list:
#                fields: ['id', 'name', 'channel.name', 'views', 'createdAt', 'updatedAt']
#            form:
#              fields:
#                - 'name'
#                - 'link'
#                - { property: 'description', type_options:{empty_data: ""}}
#                - { property: 'channel', label: 'Channel', type: 'Symfony\Bridge\Doctrine\Form\Type\EntityType', type_options: {class: AppBundle\Entity\Channel, choice_label: 'name', required: false, empty_data: null}}
#
#        Settings:
#          class: AppBundle\Entity\Settings
#          list:
#              fields: ['description', 'value']
#          disabled_actions: ['new', 'delete']
#          form:
#            fields:
#                - 'description'
#                - 'value'


vich_uploader:
  db_driver: orm
  mappings:
      blog_images:
          uri_prefix:         '%app.blog.image%'
          upload_destination: '%kernel.root_dir%/../web/uploads/images/blog'
          namer: vich_uploader.namer_uniqid #według dokumentacji'Vich\UploaderBundle\Naming\UniqidNamer' - nie dziala. Lepiej sprawdzic jak service sie nazywa w $this->container->get